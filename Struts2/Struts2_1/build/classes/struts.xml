<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>
    <!-- 包含另外一个配置文件，非模块 
    <include file=""></include>
     -->
    <!-- 文件名后不要加properties 
    <constant name="struts.custom.i18n.resources" value="message"></constant>
     -->
	<constant name="struts.multipart.maxSize" value="1048576000"></constant>
	<!--
	<include file="要引入的另一个配置文件，默认是在src目录下"></include>
	-->
	<!--
		package元素的abstract属性表示该包是抽象的，不能直接使用，需要由子包继承才可以使用，struts-default这个
		package是abstract的，因此需要我们继承这个包来使用
	-->
	<!-- 
	namespace起到命名空间分割的作用。通常将namaspace的属性值定义成页面所在的目录名。必须以/开头
	-->
	<package name="hello" extends="struts-default" namespace="/theNamespace">
		<action name="namespaceAction" class="com.wh.struts2.NamespaceAction">
			<result name="success">/nameSpace/output.jsp</result>
		</action>
	</package>
    <package name="struts2" extends="struts-default">
    <!-- 
    	采取请求转发的方式完成表单内容的添加会造成内容的重复插入
    	采取重定向的方式实现数据的添加不会导致数据的重复插入
	    <result-types>
		    <result-type name="chain" class="com.opensymphony.xwork2.ActionChainResult"/>转发到下一个action
		    <result-type name="dispatcher" class="org.apache.struts2.dispatcher.ServletDispatcherResult" default="true"/>默认的结果类型是dispatcher
		    <result-type name="freemarker" class="org.apache.struts2.views.freemarker.FreemarkerResult"/>
		    <result-type name="httpheader" class="org.apache.struts2.dispatcher.HttpHeaderResult"/>
		    <result-type name="redirect" class="org.apache.struts2.dispatcher.ServletRedirectResult"/>
		    <result-type name="redirectAction" class="org.apache.struts2.dispatcher.ServletActionRedirectResult"/>重定向到下一个action
		    <result-type name="stream" class="org.apache.struts2.dispatcher.StreamResult"/>
		    <result-type name="velocity" class="org.apache.struts2.dispatcher.VelocityResult"/>
		    <result-type name="xslt" class="org.apache.struts2.views.xslt.XSLTResult"/>
		    <result-type name="plainText" class="org.apache.struts2.dispatcher.PlainTextResult" />
		</result-types>
    
     -->
    	<!-- 对于struts.xml文件的结果配置来说，局部要优于全局 -->
    	<global-results>
            <result name="usernameInvalid">/usernameInvalid.jsp</result>
            <result name="passwordInvalid">/passwordInvalid.jsp</result>
            <result name="login">/error.jsp</result>
    	</global-results>
    	<global-exception-mappings>
        	<exception-mapping result="usernameInvalid" exception="com.wh.exception.UsernameException"></exception-mapping>
        	<exception-mapping result="passwordInvalid" exception="com.wh.exception.PasswordException"></exception-mapping>
    	</global-exception-mappings>
        <action name="loginAction" class="com.wh.struts2.LoginAction" method="myExecute">
            <result name="success">/loginActionResult.jsp</result>
            <result name="input">/loginActionInput.jsp</result>
            <interceptor-ref name="theInterceptor2"></interceptor-ref>
            <interceptor-ref name="defaultStack"></interceptor-ref>
        </action>
        <action name="loginAction2" class="com.wh.struts2.LoginAction2">
            <result name="success">/login2.jsp</result>
            <result name="input">/login2Result.jsp</result>
        </action>
        <action name="userAction" class="com.wh.struts2.UserAction">
            <result name="success">/userActionResult.jsp</result>
        </action>
        <action name="userAction2" class="com.wh.struts2.UserAction2">
            <result name="success">/userActionResult2.jsp</result>
        </action>
        
        <action name="register" class="com.wh.struts2.RegisterAction">
            <result name="success">/registerResult.jsp</result>
            <result name="input">/register.jsp</result>
        </action>
        <action name="action1" class="com.wh.struts2.Action1" method="myExecute">
            <!-- 
            protected String actionName;
		    protected String namespace;
		    protected String method;
             -->
            <result name="success" type="redirectAction">
	            <param name="actionName">action2.action</param>
	            <!-- <param name="action2中的属性">${action1中的属性}</param> -->
	            <param name="username">${username}</param>
	            <param name="password">${password}</param>
	            <param name="usernameAndPassword">${usernameAndPassword}</param>
            </result>
         
        </action>
        <action name="action2" class="com.wh.struts2.Action2">
            <result name="success">/action2.jsp</result>
        </action>
        <action name="token" class="com.wh.struts2.TokenAction">
            <result name="success">/tokenSuccess.jsp</result>
            <!-- 名字invalid.token是确定的，表示一但表单重复提交了，就跳转到指定页面 -->
            <result name="invalid.token">/tokenFail.jsp</result>
            <interceptor-ref name="token"></interceptor-ref>
            <interceptor-ref name="defaultStack"></interceptor-ref>
        </action>
        
    </package>
</struts>